# Python Application for calculating Lagrange Polynomials of size N
# @author James Wu


data = [(116,5340342343456180831716311918824435227733), (68,4694834529111866497642094185471120980099)]; #data will be list of tuples.




def getdenominator(data, x0):
    raw_input("hello");
    "multiplies every coordinate by every other coordinate according to (x0-x1)(x0-x2).. etc"
    denominator = 1;
    for (x,_) in data:
            if(x == x0): #if it's the original coordinate continue;
                continue;
            else:
                print (x0-x);
                denominator *= (x0-x);
                
   
    return denominator;

 
def getnumerator(data, x0, var):
    "gets the numerator part of lagrange interpolation, as in (var-x0)(var-x1) etc"
    numerator = 1;
    for (x, _) in data:
        if(x == x0):
            continue;
        else:
            print var, " - ", x;
            numerator *= (var-x);


    return numerator;5

def lagrangePoly(data, var,mod):
    "returns the lagrange polynomial solution f(var) for a set of data"
    total = 0;
    for (x,y) in data:
        print y;
        total += (y * getnumerator(data,x,var) / getdenominator(data,x));

    return total%mod;

    


print lagrangePoly(data, 0, 5992830235524142758386850633773258681119);
